{
	"id": "38a4cff038f8506f1150e3c05240f4ca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/lottery.sol": {
				"content": "//SPDX-License-Identifier: GPL-3.0\n \npragma solidity >=0.5.0 <0.9.0;\n\n/*\nLottery algorithm:\n1. The lottery starts by accepting ETH transactions. Anyone having an Ethereum wallet can\nsend a fixed amount of 0.1 ETH to the contract’s address.\n2. The players send ETH directly to the contract address and their Ethereum address is\nregistered. A user can send more transactions having more chances to win.\n3. There is a manager, the account that deploys and controls the contract.\n4. At some point, if there are at least 3 playesrs, he can pick a random winner from the\nplayers list. Only the manager is allowed to see the contract balance and to randomly\nselect the winner.\n5. The contract will transfer the entire balance to the winner’s address and the lottery is\nreset and ready for the next round.\n*/\n\ncontract Lottery{\n    \n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/lottery.sol": {
				"Lottery": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lottery.sol\":806:830  contract Lottery{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lottery.sol\":806:830  contract Lottery{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220adaad2e8adf3b2210fa5e36c495d4163f6e255e13b71d83c9aeceb35eeb6cb8464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220adaad2e8adf3b2210fa5e36c495d4163f6e255e13b71d83c9aeceb35eeb6cb8464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xAA 0xD2 0xE8 0xAD RETURN 0xB2 0x21 0xF 0xA5 0xE3 PUSH13 0x495D4163F6E255E13B71D83C9A 0xEC 0xEB CALLDATALOAD 0xEE 0xB6 0xCB DUP5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "806:24:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220adaad2e8adf3b2210fa5e36c495d4163f6e255e13b71d83c9aeceb35eeb6cb8464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xAA 0xD2 0xE8 0xAD RETURN 0xB2 0x21 0xF 0xA5 0xE3 PUSH13 0x495D4163F6E255E13B71D83C9A 0xEC 0xEB CALLDATALOAD 0xEE 0xB6 0xCB DUP5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "806:24:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 806,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 806,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 806,
									"end": 830,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 806,
									"end": 830,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 806,
									"end": 830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 806,
									"end": 830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 806,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 830,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 806,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 830,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220adaad2e8adf3b2210fa5e36c495d4163f6e255e13b71d83c9aeceb35eeb6cb8464736f6c63430008070033",
									".code": [
										{
											"begin": 806,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 806,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 806,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 830,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lottery.sol\":\"Lottery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lottery.sol\":{\"keccak256\":\"0x62fd7dad676533a9b25944725dc5cfb9852a52d8ba59b76933b72db33877293a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c116c2b713ae4ddaee51611a3f002cc0f22d0a8c7df0fabc83da49f58a0b0c39\",\"dweb:/ipfs/QmUYcUMr6UqcN5vYLe9SWFDzC8r37N355CCAJiSiprsWin\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/lottery.sol": {
				"ast": {
					"absolutePath": "contracts/lottery.sol",
					"exportedSymbols": {
						"Lottery": [
							2
						]
					},
					"id": 3,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Lottery",
							"nameLocation": "815:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "806:24:0",
							"usedErrors": []
						}
					],
					"src": "37:794:0"
				},
				"id": 0
			}
		}
	}
}