{
	"id": "bbedbd9dd6ab11fe648560e45fe7e8aa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/lottery.sol": {
				"content": "//SPDX-License-Identifier: GPL-3.0\n \npragma solidity >=0.5.0 <0.9.0;\n\n/*\nLottery algorithm:\n1. The lottery starts by accepting ETH transactions. Anyone having an Ethereum wallet can\nsend a fixed amount of 0.1 ETH to the contract’s address.\n2. The players send ETH directly to the contract address and their Ethereum address is\nregistered. A user can send more transactions having more chances to win.\n3. There is a manager, the account that deploys and controls the contract.\n4. At some point, if there are at least 3 playesrs, he can pick a random winner from the\nplayers list. Only the manager is allowed to see the contract balance and to randomly\nselect the winner.\n5. The contract will transfer the entire balance to the winner’s address and the lottery is\nreset and ready for the next round.\n*/\n\ncontract Lottery{\n\n    \n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/lottery.sol": {
				"Lottery": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lottery.sol\":806:831  contract Lottery{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lottery.sol\":806:831  contract Lottery{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c90e66abf68e3ff80906daab19f1951348a81aed0308d50adf875be10c75a90f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c90e66abf68e3ff80906daab19f1951348a81aed0308d50adf875be10c75a90f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xE PUSH7 0xABF68E3FF80906 0xDA 0xAB NOT CALL SWAP6 SGT BASEFEE 0xA8 BYTE 0xED SUB ADDMOD 0xD5 EXP 0xDF DUP8 JUMPDEST 0xE1 0xC PUSH22 0xA90F64736F6C63430008070033000000000000000000 ",
							"sourceMap": "806:25:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c90e66abf68e3ff80906daab19f1951348a81aed0308d50adf875be10c75a90f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xE PUSH7 0xABF68E3FF80906 0xDA 0xAB NOT CALL SWAP6 SGT BASEFEE 0xA8 BYTE 0xED SUB ADDMOD 0xD5 EXP 0xDF DUP8 JUMPDEST 0xE1 0xC PUSH22 0xA90F64736F6C63430008070033000000000000000000 ",
							"sourceMap": "806:25:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 806,
									"end": 831,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 806,
									"end": 831,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 806,
									"end": 831,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 806,
									"end": 831,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 831,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 806,
									"end": 831,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 806,
									"end": 831,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 806,
									"end": 831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 831,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 806,
									"end": 831,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 831,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c90e66abf68e3ff80906daab19f1951348a81aed0308d50adf875be10c75a90f64736f6c63430008070033",
									".code": [
										{
											"begin": 806,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 806,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 806,
											"end": 831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 806,
											"end": 831,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lottery.sol\":\"Lottery\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lottery.sol\":{\"keccak256\":\"0xea94a8f04a8554202ea1ae74d08cbd8add24e8c72efcfd5798325dcde3417166\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e1425f5fbd8a3dc16b6462d822370b68ceb1314515d0d5cc94a0ece00b57fec4\",\"dweb:/ipfs/QmSWNd1UWKUBZK3aYL3kjS7CWC6n77cg52yQfFrgFmtK6f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/lottery.sol": {
				"ast": {
					"absolutePath": "contracts/lottery.sol",
					"exportedSymbols": {
						"Lottery": [
							2
						]
					},
					"id": 3,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Lottery",
							"nameLocation": "815:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "806:25:0",
							"usedErrors": []
						}
					],
					"src": "37:795:0"
				},
				"id": 0
			}
		}
	}
}